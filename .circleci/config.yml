version: 2
jobs:
  test:
    docker:
      - image: circleci/node:8-browsers
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      - run:
          name: Show current branch (test)
          command: echo ${CIRCLE_BRANCH}
      # https://medium.freecodecamp.org/our-journey-for-using-circleci-2-0-to-build-and-deploy-an-angular-app-to-aws-s3-8e7ea3f51503
      # Restore local dependencies from cache
      - restore_cache:
          keys:
              - v1-dependencies-{{ checksum "package.json" }}
              - v1-dependencies-
      - run: npm install
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
              - node_modules
      # Run tests
      - run: npm run test-ci
  build:
    working_directory: ~/project
    docker:
      - image: circleci/node:8-browsers
    steps:
      - checkout
      - run:
          name: Show current branch (build)
          command: echo ${CIRCLE_BRANCH}
      - restore_cache:
          keys:
              - v1-dependencies-{{ checksum "package.json" }}
              - v1-dependencies-
      - run: npm install
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
              - dist
      - run:
          name: Build Angular Project to dist/
          # https://github.com/angular/angular-cli/issues/5618#issuecomment-348225508
          command: npm run ng-reg-mem -- build --prod
      - persist_to_workspace:
            root: .
            paths:
                - .
  deploy:
     docker:
       - image: circleci/node:8-browsers
     working_directory: ~/project
     steps:
     # Log the current branch
       - checkout
       - run:
           name: Show workflow folder conents before attaching workspace
           command: ls /tmp
       - attach_workspace:
           # Must be absolute path or relative path from working_directory
           at: /tmp
       - run:
           name: Show job workspace folder contents
           command: ls
       - run:
           name: Show workflow folder conents
           command: ls /tmp
       - run:
           name: Show current branch
           command: echo ${CIRCLE_BRANCH}
       # Restore cache from the build job which contains the
       # dist folder that needs to be deployed
       - restore_cache:
           keys:
            - v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
       - run:
           name: Deploy Master to Firebase or Other Branch to Staging

           command: |
                if [ "${CIRCLE_BRANCH}" == "master" ]; then
                    echo 'deploying to prod';
                    ./node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN
                else
                    echo 'deploying to staging';
                    ./node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN -p staging
                fi


workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - test
      - build
      - deploy:
          requires:
            - test
            - build
pro-only: true
